version: '3.8'

services:
  postgres:
    image: postgres:16.4-alpine
    container_name: financial-database
    environment:
      POSTGRES_DB: ${DB_NAME:-postgres}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER:-postgres}']
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  api:
    build:
      context: . # Assuming your Express app is in an "api" directory
      dockerfile: Dockerfile
    container_name: financial-api
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-postgres}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      JWT_SECRET: ${JWT_SECRET:-mysecretkey}
      PORT: ${PORT:-3001}
      POSTGRES_URL: ${POSTGRES_URL:-postgres://postgres:postgres@postgres:5432/postgres}
    ports:
      - '${PORT:-3001}:3000'
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    networks:
      - app-network
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
